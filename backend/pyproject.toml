[project]
name = "backend"
version = "0.1.0"
description = "Add your description here"
readme = "README.md"
requires-python = ">=3.12"
dependencies = [
    "alembic==1.13.1",
    "asyncpg==0.29.0",
    "fastapi==0.110.0",
    "feast[postgres]==0.49.0",
    "grpcio>=1.71.0",
    "greenlet==3.2.2",
    "kafka-python>=2.2.11",
    "minio>=7.2.15",
    "passlib[bcrypt]==1.7.4",
    "torch>=2.6.0",
    "transformers>=4.52.4",
    "pydantic>=2.7.1",
    "python-dotenv==1.0.1",
    "sqlalchemy==2.0.30",
    "uvicorn[standard]>=0.29.0",
    "python-jose>=3.5.0",
    "psycopg2-binary>=2.9.10",
    "python-multipart",
    "Pillow>=10.0.0",
    "recommendation_core",
    "httpx>=0.28.1",
    "flake8>=7.3.0",
    "sqlalchemy-utils==0.41.2",
]

[project.optional-dependencies]
dev = [
    "pytest>=8.0.0",
    "pytest-cov>=4.1.0",
    "pytest-asyncio>=0.23.5",
    "black>=24.2.0",
    "ruff>=0.3.0",
    "mypy>=1.8.0",
    "httpx>=0.27.0",  # for async API testing
]

[tool.setuptools.packages.find]
where = ["src"]

[tool.pytest.ini_options]
pythonpath = ["src"]

[tool.uv.sources]
recommendation_core = { path = "../recommendation-core" }

[tool.flake8]
exclude = ["venv", "__pycache__", ".git", ".venv", "env", ".env", "README.md"]
max-line-length = 99
ignore = ["W291", "W292", "E203", "W503"]

[tool.black]
line-length = 99
exclude = '''
/(
    README\.md
    |venv
    |\.venv
    |env
    |\.env
)/
'''

[tool.isort]
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
line_length = 99
profile = "black"
skip = ["README.md", "venv", ".venv", "env", ".env"]

[tool.bandit]
exclude_dirs = ["tests", "test_*"]
skips = ["B101", "B601"]

[tool.mypy]
python_version = "3.12"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = false
ignore_missing_imports = true
